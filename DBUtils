package jdbc;

import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Properties;
import java.util.ResourceBundle;

import com.mysql.jdbc.ResultSet;
import com.mysql.jdbc.Statement;

public class DBUtil {
	private static String driver;
	private static String url;
	private static String username;
	private static String password;

	
	static {
		try {
			//通过当前类获取类加载器
			ClassLoader classloader = DBUtil.class.getClassLoader();
			//通过类加载器的方法获得一个输入流
			InputStream is = classloader.getResourceAsStream("db.properties");
			//创建一个properties对象
			Properties props = new Properties();
			//加载输入流
			props.load(is);
			//获取相关参数的值
			driver = props.getProperty("driver");
			url = props.getProperty("url");
			username = props.getProperty("username");
			password = props.getProperty("password");
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		
		
		

	}
	
	
	Connection conn = null;
	PreparedStatement ps = null;
	ResultSet rs = null;
	public Connection getConnection() {
		try {
			//加载JDBC驱动
			Class.forName(driver);
			//创建数据库连接
			conn = DriverManager.getConnection(url, username, password);
		} catch(SQLException e) {
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
		return conn;
	}
	//关闭结果集、Statement对象、连接
	public void colseAll() {
		try {
			if(rs!=null) {
				rs.close();
			}
			if(ps!=null) {
				ps.close();
			}
			if(conn!=null) {
				conn.close();
			}
		}catch(SQLException e) {
			e.printStackTrace();
		}
	}
	//执行SQL语句，可以进行查询
	public ResultSet executeQuery(String preparedSql) {
			try {
				ps = conn.prepareStatement(preparedSql);
				rs = (ResultSet) ps.executeQuery();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
			}		
		return rs;
		
	}
	//执行SQL语句，进行新增、修改、删除
	public int executeUpdate(String prepareSql)  {
		int i = 0;
		try {
			ps =  conn.prepareStatement(prepareSql);  
            i =  ps.executeUpdate();
		}catch(SQLException e) {
			e.printStackTrace();
		}
		return i;
	}
	
}
